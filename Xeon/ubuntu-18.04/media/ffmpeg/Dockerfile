
# This file is automatically generated from .m4 template.
# To update, modify the template and regenerate.
FROM ubuntu:18.04 AS build

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates wget make autoconf automake g++ g++ libtool autotools-dev tar g++ bzip2 git cmake g++ libnuma-dev g++ g++ patch libass-dev  && \
  rm -rf /var/lib/apt/lists/*


RUN mkdir -p /opt/build && mkdir -p /opt/dist

ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig


ARG LIBOGG_REPO=https://downloads.xiph.org/releases/ogg/libogg-1.3.4.tar.gz

RUN cd /opt/build && \
    wget -O - ${LIBOGG_REPO} | tar xz && \
    cd libogg-1.3.4 && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install


ARG LIBVORBIS_REPO=https://downloads.xiph.org/releases/vorbis/libvorbis-1.3.7.tar.gz

RUN cd /opt/build && \
    wget -O - ${LIBVORBIS_REPO} | tar xz && \
    cd libvorbis-1.3.7 && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install


ARG LIBFDKAAC_REPO=https://github.com/mstorsjo/fdk-aac/archive/v0.1.6.tar.gz
RUN cd /opt/build && \
    wget -O - ${LIBFDKAAC_REPO} | tar xz && \
    cd fdk-aac-0.1.6 && \
    ./autogen.sh && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install


ARG LIBOPUS_REPO=https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz
RUN cd /opt/build && \
    wget -O - ${LIBOPUS_REPO} | tar xz && \
    cd opus-1.3.1 && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install


ARG NASM_REPO=https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.bz2
RUN cd /opt/build && \
    wget -O - ${NASM_REPO} | tar xj && \
    cd nasm-2.15.05 && \
    ./autogen.sh && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib && \
     make -j$(nproc) && \
     make install


ARG LIBVPX_REPO=https://chromium.googlesource.com/webm/libvpx.git
RUN cd /opt/build && \
    git clone ${LIBVPX_REPO} -b v1.8.2 --depth 1 && \
    cd libvpx && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=nasm && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install


ARG LIBX264_REPO=https://github.com/mirror/x264
RUN cd /opt/build && \
    git clone ${LIBX264_REPO} -b stable --depth 1 && \
    cd x264 && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

ARG YASM_REPO=https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
RUN cd /opt/build && \
    wget -O - ${YASM_REPO} | tar xz
RUN cd /opt/build/yasm-1.3.0 && \
    # TODO remove the line below whether no other component inside this project requires it.
    # `sed -i "s/) ytasm.*/)/" Makefile.in' && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib && \
    make -j $(nproc) && \
    make install


ARG LIBX265_REPO=https://github.com/videolan/x265/archive/3.3.tar.gz
RUN cd /opt/build && \
    wget -O - ${LIBX265_REPO} | tar xz && \
    cd x265-3.3/build/linux && \
    cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/local -DLIB_INSTALL_DIR=/usr/local/lib ../../source && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

ARG SVT_HEVC_REPO=https://github.com/OpenVisualCloud/SVT-HEVC
RUN cd /opt/build && \
    git clone ${SVT_HEVC_REPO}
RUN cd /opt/build/SVT-HEVC/Build/linux && \
    git checkout v1.5.0 && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_INSTALL_LIBDIR=/usr/local/lib -DCMAKE_ASM_NASM_COMPILER=yasm ../.. && \
    make -j $(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

ARG SVT_AV1_REPO=https://github.com/AOMediaCodec/SVT-AV1
RUN cd /opt/build && \
    git clone ${SVT_AV1_REPO} -b v0.8.5 --depth 1 && \
    cd SVT-AV1/Build/linux && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_INSTALL_LIBDIR=/usr/local/lib -DCMAKE_ASM_NASM_COMPILER=yasm ../.. && \
    make -j $(nproc) && \
    sed -i 's/SvtAv1dec/SvtAv1Dec/' SvtAv1Dec.pc && \
    make install DESTDIR=/opt/dist && \
    make install


ARG FFMPEG_REPO=https://github.com/FFmpeg/FFmpeg/archive/n4.2.2.tar.gz
RUN cd /opt/build && \
    wget -O - ${FFMPEG_REPO} | tar xz


ARG FFMPEG_PATCH_SVT_AV1_REPO=https://github.com/AOMediaCodec/SVT-AV1/archive/v0.8.4.tar.gz
RUN cd /opt/build && \
    wget -O - ${FFMPEG_PATCH_SVT_AV1_REPO} | tar xz && \
    cd /opt/build/FFmpeg-n4.2.2 && \
    patch -p1 < ../SVT-AV1-0.8.4/ffmpeg_plugin/0001-Add-ability-for-ffmpeg-to-run-svt-av1.patch || true

RUN cd /opt/build/FFmpeg-n4.2.2 && \
    patch -p1 < /opt/build/SVT-HEVC/ffmpeg_plugin/0001-lavc-svt_hevc-add-libsvt-hevc-encoder-wrapper.patch || true

RUN cd /opt/build/FFmpeg-n4.2.2 && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib --enable-shared --disable-static --disable-doc --disable-htmlpages --disable-manpages --disable-podpages --disable-txtpages --enable-gpl --enable-libass --enable-libfreetype --disable-xlib --disable-sdl2 --enable-nonfree --disable-vaapi --disable-hwaccels --enable-libfdk-aac --enable-libopus --enable-libvpx --enable-libvorbis --enable-libx264 --enable-libx265 --enable-libsvtav1 --enable-libsvthevc  && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

FROM ubuntu:18.04
LABEL Description="This is the base image for FFMPEG Ubuntu 18.04"
LABEL Vendor="Intel Corporation"
WORKDIR /home

# Install
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    libnuma1 libass9  && \
  rm -rf /var/lib/apt/lists/*

COPY --from=build /opt/dist /
RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/all-libs.conf && ldconfig



