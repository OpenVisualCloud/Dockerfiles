


# This file is automatically generated from .m4 template.
# To update, modify the template and regenerate.
FROM openvisualcloud/xeon-centos7-media-ffmpeg:build as build


RUN mkdir -p /opt/build && mkdir -p /opt/dist

ENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig

RUN yum install -y wget tar gcc-c++ make libtool autoconf

ARG OPENSSL_REPO=https://github.com/openssl/openssl/archive/OpenSSL_1_1_1h.tar.gz
RUN cd /opt/build && \
    wget -O - ${OPENSSL_REPO} | tar xz && \
    cd openssl-OpenSSL_1_1_1h && \
    ./config no-ssl3 shared --prefix=/usr/local/ssl --openssldir=/usr/local/ssl -fPIC -Wl,-rpath=/usr/local/ssl/lib && \
    make depend && \
    make -s V=0 && \
    make install DESTDIR=/opt/dist && \
    (cd /opt/dist/usr/local && mkdir -p lib64/pkgconfig && mv ssl/lib/pkgconfig/*.pc lib64/pkgconfig) && \
    make install && \
    (cd /usr/local && mkdir -p lib64/pkgconfig && mv ssl/lib/pkgconfig/*.pc lib64/pkgconfig)

RUN yum install -y wget bzip2

# Get OpenH264
ARG OPENH264_SRC_REPO=https://github.com/cisco/openh264/archive/v1.7.0.tar.gz
ARG OPENH264_BIN_REPO=https://github.com/cisco/openh264/releases/download/v1.7.0/libopenh264-1.7.0-linux64.4.so.bz2
RUN cd /opt/build && \
    wget -O - ${OPENH264_SRC_REPO} | tar xz openh264-1.7.0/codec/api && \
    cd openh264-1.7.0 && \
    (mkdir -p /usr/local/include/openh264 && cp -r codec /usr/local/include/openh264) && \
    (mkdir -p /opt/dist/usr/local/include/openh264 && cp -r codec /opt/dist/usr/local/include/openh264)

RUN cd /usr/local/lib64 && \
    wget -O - ${OPENH264_BIN_REPO} | bunzip2 > libopenh264.so.4 && \
    ln -s -v libopenh264.so.4 libopenh264.so && \
    cd /opt/dist/usr/local/lib64 && \
    cp -r /usr/local/lib64/libopenh264.so.4 . && \
    ln -s -v libopenh264.so.4 libopenh264.so

RUN yum install -y git cmake make autoconf gcc

ARG LIBRE_REPO=https://github.com/creytiv/re.git
RUN cd /opt/build && \
    git clone ${LIBRE_REPO} -b v0.5.0 --depth 1 && \
    cd re && \
    make SYSROOT_ALT=/usr RELEASE=1 && \
    make install SYSROOT_ALT=/usr RELEASE=1 PREFIX=/usr && \
    make SYSROOT_ALT=/opt/dist/usr RELEASE=1 && \
    make install SYSROOT_ALT=/opt/dist/usr RELEASE=1 PREFIX=/opt/dist/usr

RUN yum install -y wget cmake make gcc libglib2.0-devel patch

ARG LIBNICE_REPO=http://nice.freedesktop.org/releases/libnice-0.1.4.tar.gz
RUN cd /opt/build && \
    wget -O - ${LIBNICE_REPO} | tar xz


ARG LIBNICE_PATCH_REPO=https://github.com/open-webrtc-toolkit/owt-server/archive/v4.3.1.tar.gz

RUN cd /opt/build/libnice-0.1.4 && \
    wget -O - ${LIBNICE_PATCH_REPO} | tar xz && \
    patch -p1 < owt-server-4.3.1/scripts/patches/libnice014-agentlock.patch && \
    patch -p1 < owt-server-4.3.1/scripts/patches/libnice014-agentlock-plus.patch && \
    patch -p1 < owt-server-4.3.1/scripts/patches/libnice014-removecandidate.patch && \
    patch -p1 < owt-server-4.3.1/scripts/patches/libnice014-keepalive.patch && \
    patch -p1 < owt-server-4.3.1/scripts/patches/libnice014-startcheck.patch


RUN cd /opt/build/libnice-0.1.4 && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib64 && \
    make -j$(nproc) -s V=0 && \
    make install DESTDIR=/opt/dist && \
    make install

RUN yum install -y wget cmake automake make gcc which

ARG USRSCTP_REPO=https://github.com/sctplab/usrsctp/archive/0.9.5.0.tar.gz
RUN cd /opt/build && \
    wget -O - ${USRSCTP_REPO} | tar xz && \
    cd usrsctp-* && \
    ./bootstrap && \
    ./configure --prefix=/usr/local --libdir=/usr/local/lib64 && \
    make -j$(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

RUN yum install -y wget

ARG JSONHPP_REPO=https://github.com/nlohmann/json/releases/download/v3.6.1/json.hpp
RUN wget -O /usr/include/json.hpp ${JSONHPP_REPO}

RUN yum install -y wget xz-utils

ARG NODE_REPO=https://nodejs.org/dist/v10.21.0/node-v10.21.0-linux-x64.tar.xz
RUN cd /opt/build && \
    wget -O - ${NODE_REPO} | tar xJ && \
    cp node-v10.21.0-linux-x64/* /usr/local -rf && \
    rm -rf node-v10.21.0-linux-x64

RUN yum install -y wget gcc make pkg-config 

ARG LIBSRTP2_REPO=https://github.com/cisco/libsrtp/archive/v2.1.0.tar.gz
RUN cd /opt/build && \
    wget -O - ${LIBSRTP2_REPO} | tar xz && \
    cd libsrtp-2.1.0 && \
    CFLAGS="-fPIC -Wl,-rpath=/usr/local/ssl/lib" ./configure --enable-openssl --prefix=/usr/local --libdir=/usr/local/lib64 --with-openssl-dir=/usr/local/ssl && \
    make -s V=0 -j $(nproc) && \
    make install DESTDIR=/opt/dist && \
    make install

RUN yum install -y git gcc npm python glib2-devel boost-devel log4cxx-devel pkg-config gstreamer1-devel gstreamer1-plugins-base-devel centos-release-scl devtoolset-9

# Install npm modules
RUN npm install -g --loglevel error node-gyp@6.1.0 grunt-cli underscore jsdoc

# Get owt-server Source
ARG OWT_REPO=https://github.com/open-webrtc-toolkit/owt-server
RUN cd /opt/build && \
    git clone --depth 1 ${OWT_REPO}

# Prep OpenH264
RUN mkdir -p /opt/build/owt-server/third_party/openh264 && \
    cd /opt/build/owt-server/third_party/openh264 && \
    ln -s -v /usr/local/include/openh264/codec . && \
    ln -s -v /usr/local/lib64/libopenh264.so . && \
    echo "const char* stub() {return \"this is a stub lib\";}" > pseudo-openh264.cpp && \
    gcc pseudo-openh264.cpp -fPIC -shared -o pseudo-openh264.so

# Get licode
ARG OWT_LICODE_REPO=https://github.com/lynckia/licode.git
RUN cd /opt/build/owt-server/third_party && \
    git clone ${OWT_LICODE_REPO} && \
    cd licode && \
    git reset --hard 8b4692c88f1fc24dedad66b4f40b1f3d804b50ca && \
    git am /opt/build/owt-server/scripts/patches/licode/*.patch

# Get webrtc
ARG OWT_WEBRTC_REPO=https://github.com/open-webrtc-toolkit/owt-deps-webrtc.git
RUN mkdir -p /opt/build/owt-server/third_party/webrtc && \
    cd /opt/build/owt-server/third_party/webrtc && \
    git clone -b 59-server --depth 1 ${OWT_WEBRTC_REPO} src && \
    ./src/tools-woogeen/install.sh && \
    ./src/tools-woogeen/build.sh

# Get webrtc79
RUN mkdir -p /opt/build/owt-server/third_party/webrtc-m79 && \
    cd /opt/build/owt-server/third_party/webrtc-m79 && \
    sed -i "s/git clone/git clone --depth 1/" ../../scripts/installWebrtc.sh && \
    (. /opt/rh/devtoolset-9/enable && bash ../../scripts/installWebrtc.sh)

# Get SDK
ARG OWT_SDK_REPO=https://github.com/open-webrtc-toolkit/owt-client-javascript.git
RUN cd /opt/build && \
    git clone -b master --depth 1 ${OWT_SDK_REPO} && \
    cd owt-client-javascript/scripts && \
    npm install && grunt 
    
# Get quic
ARG OWT_QUIC_REPO=https://github.com/open-webrtc-toolkit/owt-deps-quic/releases/download/v0.1/dist.tgz
RUN mkdir -p /opt/build/owt-server/third_party/quic-lib && \
    cd /opt/build/owt-server/third_party/quic-lib && \
    wget -O - ${OWT_QUIC_REPO} | tar xz

# Build and pack owt
RUN cd /opt/build/owt-server && \
    sed -i "/cflags_cc/s/\[/[\"-Wl,rpath=\/usr\/local\/ssl\/lib\",/" source/agent/webrtc/rtcConn/binding.gyp source/agent/webrtc/rtcFrame/binding.gyp && \
    sed -i "s/-lssl/<!@(pkg-config --libs openssl)/" source/agent/webrtc/rtcConn/binding.gyp source/agent/webrtc/rtcFrame/binding.gyp && \
    sed -i "/DENABLE_SVT_HEVC_ENCODER/i\"<!@(pkg-config --cflags SvtHevcEnc)\"," source/agent/video/videoMixer/videoMixer_sw/binding.sw.gyp source/agent/video/videoTranscoder/videoTranscoder_sw/binding.sw.gyp source/agent/video/videoTranscoder/videoAnalyzer_sw/binding.sw.gyp && \
    sed -i "/lSvtHevcEnc/i\"<!@(pkg-config --libs SvtHevcEnc)\"," source/agent/video/videoMixer/videoMixer_sw/binding.sw.gyp source/agent/video/videoTranscoder/videoTranscoder_sw/binding.sw.gyp source/agent/video/videoTranscoder/videoAnalyzer_sw/binding.sw.gyp && \
    sed -i "1i#include <stdint.h>" source/agent/sip/sipIn/sip_gateway/sipua/src/account.c

# Install nan module
RUN cd /opt/build/owt-server && \
    echo {} > package.json && \
    npm install nan

# Build and package
RUN cd /opt/build/owt-server && \
    (. /opt/rh/devtoolset-9/enable && ./scripts/build.js -t mcu-all -r -c) && \
    ./scripts/pack.js -t all --install-module --no-pseudo --app-path /opt/build/owt-client-javascript/dist/samples/conference && \
    mkdir -p /opt/dist/home && \
    mv dist /opt/dist/home/owt

RUN cd /opt/dist/home && \
    echo "#!/bin/bash -e" >>launch.sh && \
    echo "service mongodb start &" >>launch.sh && \
    echo "service rabbitmq-server start &" >>launch.sh && \
    echo "while ! mongo --quiet --eval \"db.adminCommand(\\\"listDatabases\\\")\"" >>launch.sh && \
    echo "do" >>launch.sh && \
    echo "  echo mongod not launch" >>launch.sh && \
    echo "  sleep 1" >>launch.sh && \
    echo "done" >>launch.sh && \
    echo "echo mongodb connected successfully" >>launch.sh && \
    echo "cd /home/owt" >>launch.sh && \
    echo "./management_api/init.sh" >>launch.sh && \
    echo "./bin/start-all.sh" >>launch.sh && \
    chmod +x launch.sh

RUN echo "Start cleanup" && \
    rm -rf /opt/dist//usr/local/include && \
    rm -rf /opt/dist//usr/local/share/doc && \
    rm -rf /opt/dist//usr/local/share/gtk-doc && \
    rm -rf /opt/dist//usr/local/share/man && \
    ( find /opt/dist -name "*.a" -exec rm -f {} \; ) && \
    echo "Cleanup done"

FROM openvisualcloud/xeon-centos7-media-ffmpeg:latest
LABEL Description="This is the base image for the OWT service centos 7"
LABEL Vendor="Intel Corporation"
WORKDIR /home

# Install
RUN yum install -y wget xz-utils rabbitmq-server boost-system boost-thread log4cxx glib2 freetype

COPY --from=build /opt/dist /
RUN echo "/usr/local/lib64" >> /etc/ld.so.conf.d/all-libs.conf && ldconfig


ARG NODE_REPO=https://nodejs.org/dist/v10.21.0/node-v10.21.0-linux-x64.tar.xz
RUN cd /usr/local && \
    wget -O - ${NODE_REPO} | tar xJ && \
    cp -r node-v10.21.0-linux-x64/* . && \
    rm -rf node-v10.21.0-linux-x64

RUN echo "[mongodb-org-3.6]" >> /etc/yum.repos.d/mongodb-org-3.6.repo && \
    echo "name=MongoDB Repository" >> /etc/yum.repos.d/mongodb-org-3.6.repo && \
    echo "baseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/3.6/x86_64/" >> /etc/yum.repos.d/mongodb-org-3.6.repo && \
    echo "gpgcheck=1" >> /etc/yum.repos.d/mongodb-org-3.6.repo && \
    echo "enabled=1" >> /etc/yum.repos.d/mongodb-org-3.6.repo && \
    echo "gpgkey=https://www.mongodb.org/static/pgp/server-3.6.asc" >> /etc/yum.repos.d/mongodb-org-3.6.repo && \
    yum install -y -q mongodb-org && rm -rf /var/cache/yum/*


