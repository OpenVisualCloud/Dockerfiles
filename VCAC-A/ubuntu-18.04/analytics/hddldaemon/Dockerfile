
# This file is automatically generated from .m4 template.
# To update, modify the template and regenerate.
FROM ubuntu:18.04 AS build


RUN mkdir -p /opt/build && mkdir -p /opt/dist

ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    wget make autoconf automake build-essential ca-certificates libtool libboost-filesystem1.65 libboost-thread1.65 libboost-program-options1.65 libjson-c-dev && \
  rm -rf /var/lib/apt/lists/*

# build libusb
ARG LIBUSB_REPO=https://github.com/libusb/libusb/archive/v1.0.22.tar.gz
RUN cd /opt/build && \
    wget -O - ${LIBUSB_REPO} | tar xz && \
    cd libusb* && \
    ./autogen.sh enable_udev=no && \
    make -j$(nproc) && \
    cp ./libusb/.libs/libusb-1.0.so /lib/x86_64-linux-gnu/libusb-1.0.so.0

RUN mkdir -p /opt/dist/lib/x86_64-linux-gnu	&& \
    cp /lib/x86_64-linux-gnu/libusb-1.0.so.0 /opt/dist/lib/x86_64-linux-gnu/libusb-1.0.so.0

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    cpio && \
  rm -rf /var/lib/apt/lists/*

# Install OpenVINO - Closed source dldt
ARG OPENVINO_REPO=http://registrationcenter-download.intel.com/akdlm/irc_nas/16803/l_openvino_toolkit_p_2020.4.287.tgz

#Download and unpack OpenVino
RUN mkdir /opt/build/openvino
RUN wget ${OPENVINO_REPO} -P /opt/build/openvino
RUN if [ -f /opt/build/openvino/l_openvino_toolkit_p_2020.4.287.tgz ]; \
    then tar xzvf /opt/build/openvino/l_openvino_toolkit_p_2020.4.287.tgz -C /opt/build/openvino && rm /opt/build/openvino/l_openvino_toolkit_p_2020.4.287.tgz; \
    else echo "Please prepare the OpenVino installation bundle"; \
fi

# Create a silent configuration file for install
RUN echo "ACCEPT_EULA=accept" > /opt/build/openvino/silent.cfg                        && \
    echo "CONTINUE_WITH_OPTIONAL_ERROR=yes" >> /opt/build/openvino/silent.cfg         && \
    echo "PSET_INSTALL_DIR=/opt/intel" >> /opt/build/openvino/silent.cfg              && \
    echo "CONTINUE_WITH_INSTALLDIR_OVERWRITE=yes" >> /opt/build/openvino/silent.cfg   && \
    echo "COMPONENTS=DEFAULTS" >> /opt/build/openvino/silent.cfg                      && \
    echo "COMPONENTS=ALL" >> /opt/build/openvino/silent.cfg                           && \
    echo "PSET_MODE=install" >> /opt/build/openvino/silent.cfg                        && \
    echo "INTEL_SW_IMPROVEMENT_PROGRAM_CONSENT=no" >> /opt/build/openvino/silent.cfg  && \
    echo "SIGNING_ENABLED=no" >> /opt/build/openvino/silent.cfg

#Install OpenVino
RUN /opt/build/openvino/l_openvino_toolkit_p_2020.4.287/install.sh --ignore-signature --cli-mode -s /opt/build/openvino/silent.cfg && rm -rf /opt/build/openvino

ARG OPENVINO_IE_DIR=/opt/intel/openvino/deployment_tools/inference_engine

ENV IE_PLUGINS_PATH=${OPENVINO_IE_DIR}/lib/intel64
ENV HDDL_INSTALL_DIR=${OPENVINO_IE_DIR}/external/hddl
ENV InferenceEngine_DIR=${OPENVINO_IE_DIR}/share
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/openvino/deployment_tools/ngraph/lib:/opt/intel/opencl:$HDDL_INSTALL_DIR/lib:${OPENVINO_IE_DIR}/external/gna/lib:${OPENVINO_IE_DIR}/external/mkltiny_lnx/lib:${OPENVINO_IE_DIR}/external/omp/lib:${OPENVINO_IE_DIR}/external/tbb/lib:/opt/intel/openvino/openvx/lib:$IE_PLUGINS_PATH

#Remove components of OpenVino that are not needed
ARG CV_BASE_DIR=/opt/intel/openvino
RUN rm -rf ${CV_BASE_DIR}/uninstall* && \
    rm -rf ${CV_BASE_DIR}/python && \
    rm -rf ${CV_BASE_DIR}/documentation && \
    rm -f ${CV_BASE_DIR}/install_dependencies/*.deb && \
    rm -rf ${CV_BASE_DIR}/data_processing	&& \
    rm -rf ${CV_BASE_DIR}/openvino_toolkit_uninstaller && \
    rm -rf ${CV_BASE_DIR}/deployment_tools/demo && \
    rm -rf ${CV_BASE_DIR}/deployment_tools/intel_models && \
    rm -rf ${CV_BASE_DIR}/deployment_tools/model_optimizer && \
    rm -rf ${CV_BASE_DIR}/deployment_tools/tools && \
    rm -rf ${CV_BASE_DIR}/deployment_tools/open_model_zoo && \
    rm -rf ${CV_BASE_DIR}/deployment_tools/inference_engine/samples && \
    rm -rf ${CV_BASE_DIR}/licensing       && \ 
    rm -rf ${CV_BASE_DIR}/openvx/samples && \
    rm -rf ${CV_BASE_DIR}/opencv

#Copy over directories to run image
RUN mkdir -p /opt/dist/opt/intel && \
    cp -rH /opt/intel/openvino /opt/dist/opt/intel/

# cleanup
RUN rm -rf /opt/dist/usr/local/include && \
    rm -rf /opt/dist/usr/local/lib/pkgconfig && \
    find /opt/dist -name "*.a" -exec rm -f {} \; || echo ""
RUN rm -rf /opt/dist/usr/local/share/doc /opt/dist/usr/local/share/gtk-doc
RUN rm -rf /opt/dist/usr/local/share/man

FROM ubuntu:18.04
LABEL Description="This is the HDDL Daemon image for ubuntu 18.04"
LABEL Vendor="Intel Corporation"
WORKDIR /home

# Install
RUN apt-get update && apt-get upgrade -y systemd
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    libboost-filesystem1.65-dev libboost-thread1.65-dev libboost-program-options1.65-dev libjson-c3  && \
  rm -rf /var/lib/apt/lists/*

COPY --from=build /opt/dist /
RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/all-libs.conf && ldconfig


ARG OPENVINO_IE_DIR=/opt/intel/openvino/deployment_tools/inference_engine
ENV IE_PLUGINS_PATH=${OPENVINO_IE_DIR}/lib/intel64
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/openvino/deployment_tools/ngraph/lib:/opt/intel/opencl:$HDDL_INSTALL_DIR/lib:/opt/intel/openvino/deployment_tools/inference_engine/external/gna/lib:/opt/intel/openvino/deployment_tools/inference_engine/external/mkltiny_lnx/lib:/opt/intel/openvino/deployment_tools/inference_engine/external/omp/lib:/opt/intel/openvino/deployment_tools/inference_engine/external/tbb/lib:/opt/intel/openvino/openvx/lib:/usr/local/lib:$IE_PLUGINS_PATH

#Copy over hddl scripts
COPY *_hddl.sh /usr/local/bin/

