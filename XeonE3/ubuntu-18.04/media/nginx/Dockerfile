

# BSD 3-Clause License
#
# Copyright (c) 2021, Intel Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This file is automatically generated from .m4 template.
# To update, modify the template and regenerate.
FROM ubuntu:18.04 AS build


RUN mkdir -p /opt/build && mkdir -p /opt/dist

ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates wget patch && \
  rm -rf /var/lib/apt/lists/*

ARG NGINX_FLV_PATCHES_REPO=https://github.com/VCDP/CDN/archive/v0.2.tar.gz
ARG NGINX_FLV_PATCHES_PATH=/opt/build/CDN-0.2
RUN cd /opt/build && \
    wget -O - ${NGINX_FLV_PATCHES_REPO} | tar xz

# build nginx flv
ARG NGINX_FLV_REPO=https://github.com/winshining/nginx-http-flv-module/archive/v1.2.9.tar.gz
RUN cd /opt/build && \
    wget -O - ${NGINX_FLV_REPO} | tar xz && \
    cd nginx-http-flv-module-1.2.9 && \
    mkdir -p BUILD_DEST/var/www/html && \
    cp -f stat.xsl BUILD_DEST/var/www/html && \
    find ${NGINX_FLV_PATCHES_PATH}/Nginx-HTTP-FLV_patches -type f -name *.patch -print0 | sort -z | xargs -t -0 -n 1 patch -p1 -i



# build nginx upload
ARG NGINX_UPLOAD_REPO=https://github.com/fdintino/nginx-upload-module/archive/2.3.0.tar.gz
RUN cd /opt/build && \
    wget -O - ${NGINX_UPLOAD_REPO} | tar xz

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    ca-certificates gcc libpcre3-dev libxslt1-dev make wget zlib1g-dev libssl-dev && \
  rm -rf /var/lib/apt/lists/*

# build nginx
ARG NGINX_REPO=https://nginx.org/download/nginx-1.21.0.tar.gz
RUN cd /opt/build && \
    wget -O - ${NGINX_REPO} | tar xz && \
    cd nginx-1.21.0 && \
    ./configure --prefix=/var/www \
        --sbin-path=/usr/local/sbin/nginx --modules-path=/usr/local/lib/nginx/modules \
        --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/www/log/error.log \
        --pid-path=/var/www/nginx.pid --lock-path=/var/www/nginx.lock \
        --http-log-path=/var/www/log/access.log \
        --http-client-body-temp-path=/var/www/tmp/client_body \
        --http-proxy-temp-path=/var/www/tmp/proxy \
        --http-fastcgi-temp-path=/var/www/tmp/fastcgi \
        --http-uwsgi-temp-path=/var/www/tmp/uwsgi \
        --http-scgi-temp-path=/var/www/tmp/scgi \
        --user=www-data \
        --group=www-data \
        --with-select_module --with-poll_module --with-threads --with-file-aio \
        --with-http_ssl_module --with-http_v2_module --with-http_realip_module \
        --with-http_addition_module --with-http_xslt_module --with-http_sub_module \
        --with-http_dav_module --with-http_flv_module --with-http_mp4_module \
        --with-http_gunzip_module --with-http_gzip_static_module \
        --with-http_auth_request_module --with-http_random_index_module \
        --with-http_secure_link_module --with-http_degradation_module \
        --with-http_slice_module --with-http_stub_status_module --with-stream \
        --with-stream_ssl_module --with-stream_realip_module \
        --with-stream_ssl_preread_module --with-pcre \
        --add-module=../nginx-http-flv-module-1.2.9 \
        --add-module=../nginx-upload-module-2.3.0 \
    && make -j$(nproc) \
    && make install DESTDIR=/opt/dist

# NGINX Setup
COPY nginx.conf /opt/dist/etc/nginx
RUN mkdir -p /opt/dist/var/www/tmp/client_body && \
    mkdir -p /opt/dist/var/www/tmp/proxy && \
    mkdir -p /opt/dist/var/www/tmp/fastcgi && \
    mkdir -p /opt/dist/var/www/tmp/uwsgi && \
    mkdir -p /opt/dist/var/www/tmp/scgi && \
    mkdir -p /opt/dist/var/www/cache && \
    mkdir -p /opt/dist/var/www/dash && \
    mkdir -p /opt/dist/var/www/hls && \
    mkdir -p /opt/dist/var/www/upload && \
    mkdir -p /opt/dist/var/www/html

# cleanup
RUN rm -rf /opt/dist/usr/local/include && \
    rm -rf /opt/dist/usr/local/lib/pkgconfig && \
    find /opt/dist -name "*.a" -exec rm -f {} \; || echo ""
RUN rm -rf /opt/dist/usr/local/share/doc /opt/dist/usr/local/share/gtk-doc
RUN rm -rf /opt/dist/usr/local/share/man

FROM openvisualcloud/xeone3-ubuntu1804-media-ffmpeg:-n
LABEL Description="This is the base image for NGINX+RTMP ubuntu 18.04"
LABEL Vendor="Intel Corporation"
WORKDIR /home

# Install
RUN apt-get update && apt-get upgrade -y systemd
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    libpcre3 libxml2 libxslt1.1 zlib1g libssl1.1 && \
  rm -rf /var/lib/apt/lists/*

COPY --from=build /opt/dist /
RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/all-libs.conf && ldconfig



